name: Build and Push 

on:
  push:
    branches:
      - main

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      nginx_tag: ${{ steps.meta_nginx.outputs.tags }}
      backend_tag: ${{ steps.meta_backend.outputs.tags }}
      cron_tag: ${{ steps.meta_cron.outputs.tags }}
      scrambling_tag: ${{ steps.meta_scrambling.outputs.tags }}
      labels: ${{ steps.meta_nginx.outputs.labels }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Extract metadata for nginx
        id: meta_nginx
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/nginx
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for backend
        id: meta_backend
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/backend
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for cron
        id: meta_cron
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/cron
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Extract metadata for scrambling
        id: meta_scrambling
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}/scrambling
          tags: |
            type=sha
            type=raw,value=latest,enable={{is_default_branch}}

  build:
    runs-on: ubuntu-latest
    needs: metadata
    strategy:
      matrix:
        include:
          - name: nginx
            context: .
            dockerfile: docker/production/nginx.Dockerfile
          - name: backend
            context: ./backend
            dockerfile: docker/production/backend.Dockerfile
          - name: cron
            context: ./backend
            dockerfile: docker/production/cron.Dockerfile
          - name: scrambling
            context: ./scrambling
            dockerfile: docker/production/scrambling.Dockerfile
    steps:
      - uses: actions/checkout@v5
      - uses: docker/setup-qemu-action@v3.6.0
      - uses: docker/setup-buildx-action@v3.11.1
      - uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ needs.metadata.outputs[format('{0}_tag', matrix.name)] }}
          labels: ${{ needs.metadata.outputs.labels }}
          platforms: linux/arm64
          build-args: |
            ${{ matrix.name == 'nginx' && format('VITE_WCA_GET_CODE_URL={0}', secrets.VITE_WCA_GET_CODE_URL) || '' }}
            ${{ matrix.name == 'nginx' && format('VITE_SCRAMBLE_IMAGES_PATH={0}', secrets.VITE_SCRAMBLE_IMAGES_PATH) || '' }}
            ${{ matrix.name == 'nginx' && 'NODE_ENV=production' || '' }}
          cache-from: type=gha,scope=${{ matrix.name }}
          cache-to: type=gha,scope=${{ matrix.name }},mode=max

  update-docker-compose:
    runs-on: ubuntu-latest
    needs: [build, metadata]
    steps:
      - uses: actions/checkout@v5
      - uses: mikefarah/yq@v4.47.1
        with:
          cmd: |
            yq e -P '.services.nginx.image = "${{ needs.metadata.outputs.nginx_tag }}"' -i docker-compose.prod.yml &&
            yq e -P '.services.backend.image = "${{ needs.metadata.outputs.backend_tag }}"' -i docker-compose.prod.yml &&
            yq e -P '.services.cron.image = "${{ needs.metadata.outputs.cron_tag }}"' -i docker-compose.prod.yml &&
            yq e -P '.services.scrambling.image = "${{ needs.metadata.outputs.scrambling_tag }}"' -i docker-compose.prod.yml
      - uses: stefanzweifel/git-auto-commit-action@v6.0.1
        with:
          commit_message: "Update docker-compose.prod.yml with new image tags"
          branch: main
          file_pattern: docker-compose.prod.yml

  deploy:
    runs-on: ubuntu-latest
    needs: update-docker-compose
    name: Deploy to Server
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            set -euo pipefail

            cd /app

            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            git fetch origin main
            git reset --hard origin/main

            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml down
            docker compose --env-file .env.production -f docker-compose.prod.yml up -d

            docker image prune -af
