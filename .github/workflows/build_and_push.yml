name: Build and Push 

on:
  push:
    branches:
      - main

jobs:
  metadata:
    runs-on: ubuntu-latest
    outputs:
      nginx_tag: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
      backend_tag: ${{ fromJSON(steps.meta.outputs.json).tags[1] }}
      cron_tag: ${{ fromJSON(steps.meta.outputs.json).tags[2] }}
      scrambling_tag: ${{ fromJSON(steps.meta.outputs.json).tags[3] }}
      labels: ${{ steps.meta.outputs.labels }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.8.0
        with:
          images: |
            ghcr.io/${{ github.repository }}/nginx
            ghcr.io/${{ github.repository }}/backend
            ghcr.io/${{ github.repository }}/cron
            ghcr.io/${{ github.repository }}/scrambling
          tags: |
            type=sha
      - name: Debug print metadata outputs
        run: |
          echo "Raw tags output:"
          echo '${{ steps.meta.outputs.tags }}'

          echo ""
          echo "Raw JSON output:"
          echo '${{ steps.meta.outputs.json }}' | jq .

  build-nginx:
    runs-on: ubuntu-latest
    needs: metadata
    steps:
      - uses: actions/checkout@v5
      - uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: docker/production/nginx.Dockerfile
          push: true
          tags: ${{ needs.metadata.outputs.nginx_tag }}
          labels: ${{ needs.metadata.outputs.labels }}
          build-args: |
            VITE_WCA_GET_CODE_URL=${{ secrets.VITE_WCA_GET_CODE_URL }}
            VITE_SCRAMBLE_IMAGES_PATH=${{ secrets.VITE_SCRAMBLE_IMAGES_PATH }}
            NODE_ENV=production

  build-backend:
    runs-on: ubuntu-latest
    needs: metadata
    steps:
      - uses: actions/checkout@v5
      - uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: docker/production/backend.Dockerfile
          push: true
          tags: ${{ needs.metadata.outputs.backend_tag }}
          labels: ${{ needs.metadata.outputs.labels }}

  build-cron:
    runs-on: ubuntu-latest
    needs: metadata
    steps:
      - uses: actions/checkout@v5
      - uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: docker/production/cron.Dockerfile
          push: true
          tags: ${{ needs.metadata.outputs.cron_tag }}
          labels: ${{ needs.metadata.outputs.labels }}

  build-scrambling:
    runs-on: ubuntu-latest
    needs: metadata
    steps:
      - uses: actions/checkout@v5
      - uses: docker/login-action@v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v4
        with:
          context: ./scrambling
          file: docker/production/scrambling.Dockerfile
          push: true
          tags: ${{ needs.metadata.outputs.scrambling_tag }}
          labels: ${{ needs.metadata.outputs.labels }}

  update-docker-compose:
    runs-on: ubuntu-latest
    needs: [build-nginx, build-backend, build-cron, build-scrambling]
    steps:
      - uses: actions/checkout@v5
      - uses: mikefarah/yq@v4.47.1
        with:
          cmd: |
            yq e -P '.services.nginx.image = "${{ needs.metadata.outputs.nginx_tag }}"' -i docker-compose.prod.yml &&
            yq e -P '.services.backend.image = "${{ needs.metadata.outputs.backend_tag }}"' -i docker-compose.prod.yml &&
            yq e -P '.services.cron.image = "${{ needs.metadata.outputs.cron_tag }}"' -i docker-compose.prod.yml &&
            yq e -P '.services.scrambling.image = "${{ needs.metadata.outputs.scrambling_tag }}"' -i docker-compose.prod.yml
      - uses: stefanzweifel/git-auto-commit-action@v6.0.1
        with:
          commit_message: "Update docker-compose.prod.yml with new image tags"
          branch: main
          file_pattern: docker-compose.prod.yml

  deploy:
    runs-on: ubuntu-latest
    needs: update-docker-compose
    name: Deploy to Server
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            set -euo pipefail

            cd /app

            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            git stash

            git pull origin main

            docker compose -f docker-compose.prod.yml pull

            docker compose -f docker-compose.prod.yml down

            docker compose --env-file .env.production -f docker-compose.prod.yml up -d

            docker image prune -af
