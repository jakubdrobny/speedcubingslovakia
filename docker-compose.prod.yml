services:
  nginx:
    image: ghcr.io/jakubdrobny/speedcubingslovakia/nginx:sha-b84d89c
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/scramble_images:/usr/share/nginx/images:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/www/certbot:/var/www/certbot:ro
    networks:
      - speedcubingslovakia
    depends_on:
      backend:
        condition: service_healthy
      grafana:
        condition: service_started
    restart: always
    healthcheck:
      test:
        - CMD
        - wget
        - -q
        - --spider
        - --no-check-certificate
        - http://localhost/
      interval: 10s
      timeout: 5s
      retries: 5
  backend:
    image: ghcr.io/jakubdrobny/speedcubingslovakia/backend:sha-b84d89c
    volumes:
      - .env.production:/app/.env
      - ./data/scramble_images:/app/scramble_images
      - ./backend/CountriesGeo.json:/app/CountriesGeo.json
    environment:
      GIN_MODE: release
    networks:
      - speedcubingslovakia
    restart: always
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        - CMD
        - wget
        - -q
        - --spider
        - http://localhost:8000/health
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
  cron:
    image: ghcr.io/jakubdrobny/speedcubingslovakia/cron:sha-b84d89c
    restart: always
    volumes:
      - .env.production:/app/.env:ro
      - ./backend/cronjob/crontab:/etc/crontabs/root:ro
      - ./backend/drive-credentials-production.json:/app/configs/drive-credentials.json:ro
      - ./data/db_backups:/app/db_backups
      - ./data/logs:/app/logs
      - ./data/scramble_images:/app/scramble_images
      - ./data/monitoring_backups:/app/monitoring_backups
      - ./data/grafana_data:/app/grafana_data
      - ./data/loki_data:/app/loki_data
      - ./data/mimir_data:/app/mimir_data
    networks:
      - speedcubingslovakia
    depends_on:
      db:
        condition: service_healthy
  db:
    image: postgres:17.5-alpine
    restart: always
    env_file:
      - .env.production
    volumes:
      - ./data/postgres_data:/var/lib/postgresql/data
    networks:
      - speedcubingslovakia
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      retries: 5
  migrate:
    image: migrate/migrate:v4.18.3
    profiles:
      - migrate
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env.production
    environment:
      - MIGRATE_CMD=${MIGRATE_CMD}
      - MIGRATE_STEPS=${MIGRATE_STEPS}
      - MIGRATE_VERSION=${MIGRATE_VERSION}
      - MIGRATE_TITLE=${MIGRATE_TITLE}
    networks:
      - speedcubingslovakia
    volumes:
      - ./database/migrations:/migrations
      - ./database/run-migrate.sh:/usr/local/bin/run-migrate.sh
    entrypoint:
      - run-migrate.sh
  scrambling:
    image: ghcr.io/jakubdrobny/speedcubingslovakia/scrambling:sha-b84d89c
    env_file:
      - .env.production
    restart: always
    networks:
      - speedcubingslovakia
  node-exporter:
    image: prom/node-exporter:v1.9.1
    container_name: node-exporter
    restart: unless-stopped
    pid: host
    volumes:
      - /:/host:ro,rslave
    command:
      - --path.rootfs=/host
    networks:
      - speedcubingslovakia
  alloy:
    image: grafana/alloy:v1.10.1
    volumes:
      - ./configs/monitoring/config.alloy:/etc/alloy/config.alloy
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - run
      - /etc/alloy/config.alloy
    restart: always
    networks:
      - speedcubingslovakia
    depends_on:
      - backend
      - mimir
      - loki
      - grafana
  mimir:
    image: grafana/mimir:2.16.1
    volumes:
      - ./configs/monitoring/mimir-config.yml:/etc/mimir/mimir.yml
      - ./data/mimir_data:/mimir
    command:
      - -config.file=/etc/mimir/mimir.yml
    restart: always
    networks:
      - speedcubingslovakia
  loki:
    image: grafana/loki:3.5.3
    volumes:
      - ./configs/monitoring/loki-config.yml:/etc/loki/loki-config.yml
      - ./data/loki_data:/loki
    command: -config.file=/etc/loki/loki-config.yml
    restart: always
    networks:
      - speedcubingslovakia
  grafana:
    image: grafana/grafana:12.0.4
    env_file:
      - .env.production
    volumes:
      - ./data/grafana_data:/var/lib/grafana
    restart: always
    networks:
      - speedcubingslovakia
networks:
  speedcubingslovakia:
